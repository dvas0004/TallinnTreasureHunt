__d(function (global, require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = require(_dependencyMap[1], "./../node_modules/react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _jsxFileName = "/home/dvas0004/Dropbox/TallinnTreasureHunt/components/Compass.js";

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _reactNative = require(_dependencyMap[2], "react-native");

  var _reactRedux = require(_dependencyMap[3], "react-redux");

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    Compass: {
      displayName: "Compass"
    }
  };

  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/home/dvas0004/Dropbox/TallinnTreasureHunt/components/Compass.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var _require = require(_dependencyMap[2], 'react-native'),
      DeviceEventEmitter = _require.DeviceEventEmitter;

  var ReactNativeHeading = require(_dependencyMap[4], 'react-native-heading');

  var Compass = _wrapComponent("Compass")(function (_Component) {
    _inherits(Compass, _Component);

    function Compass(props) {
      _classCallCheck(this, Compass);

      var _this = _possibleConstructorReturn(this, (Compass.__proto__ || Object.getPrototypeOf(Compass)).call(this, props));

      _this.state = _extends({}, _this.state, {
        heading: null
      });
      return _this;
    }

    _createClass(Compass, [{
      key: "render",
      value: function render() {
        return _react3.default.createElement(
          _reactNative.View,
          {
            style: {
              alignItems: "center"
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 22
            }
          },
          _react3.default.createElement(
            _reactNative.View,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 24
              }
            },
            _react3.default.createElement(
              _reactNative.Text,
              {
                style: {
                  fontSize: 15
                },
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 25
                }
              },
              "Your heading:"
            )
          ),
          _react3.default.createElement(
            _reactNative.View,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 30
              }
            },
            _react3.default.createElement(
              _reactNative.Text,
              {
                style: {
                  fontWeight: "bold",
                  fontSize: 18
                },
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 31
                }
              },
              this.state.heading && this.state.heading.compass || null
            )
          ),
          _react3.default.createElement(
            _reactNative.View,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 36
              }
            },
            _react3.default.createElement(
              _reactNative.Text,
              {
                style: {
                  fontWeight: "bold",
                  fontSize: 18
                },
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 37
                }
              },
              this.state.heading && this.state.heading.degrees || null,
              " Degrees"
            )
          )
        );
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        ReactNativeHeading.start(1).then(function (didStart) {
          _this2.setState({
            headingIsSupported: didStart
          });
        });
        DeviceEventEmitter.addListener('headingUpdated', function (data) {
          var headingCompass = "N/A";

          if (data >= 365 - 23 || data <= 23) {
            headingCompass = "North";
          } else if (data <= 68) {
            headingCompass = "North East";
          } else if (data <= 113) {
            headingCompass = "East";
          } else if (data <= 158) {
            headingCompass = "South East";
          } else if (data <= 203) {
            headingCompass = "South";
          } else if (data <= 248) {
            headingCompass = "South West";
          } else if (data <= 293) {
            headingCompass = "West";
          } else if (data < 365 - 23) {
            headingCompass = "North West";
          }

          _this2.setState({
            heading: {
              degrees: data,
              compass: headingCompass
            }
          });
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        ReactNativeHeading.stop();
        DeviceEventEmitter.removeAllListeners('headingUpdated');
      }
    }]);

    return Compass;
  }(_react2.Component));

  function mapStateToProps(state) {
    return {
      appData: state.appData
    };
  }

  function mapDispatchToProps(dispatch) {
    return {
      sendLocation: function (_sendLocation) {
        function sendLocation(_x) {
          return _sendLocation.apply(this, arguments);
        }

        sendLocation.toString = function () {
          return _sendLocation.toString();
        };

        return sendLocation;
      }(function (data) {
        return dispatch(sendLocation(data));
      })
    };
  }

  exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Compass);
});