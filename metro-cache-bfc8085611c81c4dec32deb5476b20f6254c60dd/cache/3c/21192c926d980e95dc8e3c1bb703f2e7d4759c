__d(function (global, require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.statics = undefined;

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _ModuleBase2 = require(_dependencyMap[0], "../../../utils/ModuleBase");

  var _ModuleBase3 = _interopRequireDefault(_ModuleBase2);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var Crashlytics = function (_ModuleBase) {
    _inherits(Crashlytics, _ModuleBase);

    function Crashlytics(firebaseApp) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      _classCallCheck(this, Crashlytics);

      return _possibleConstructorReturn(this, (Crashlytics.__proto__ || Object.getPrototypeOf(Crashlytics)).call(this, firebaseApp, options));
    }

    _createClass(Crashlytics, [{
      key: "crash",
      value: function crash() {
        this._native.crash();
      }
    }, {
      key: "log",
      value: function log(message) {
        this._native.log(message);
      }
    }, {
      key: "recordError",
      value: function recordError(code, message) {
        this._native.recordError(code, message);
      }
    }, {
      key: "setBoolValue",
      value: function setBoolValue(key, value) {
        this._native.setBoolValue(key, value);
      }
    }, {
      key: "setFloatValue",
      value: function setFloatValue(key, value) {
        this._native.setFloatValue(key, value);
      }
    }, {
      key: "setIntValue",
      value: function setIntValue(key, value) {
        this._native.setIntValue(key, value);
      }
    }, {
      key: "setStringValue",
      value: function setStringValue(key, value) {
        this._native.setStringValue(key, value);
      }
    }, {
      key: "setUserIdentifier",
      value: function setUserIdentifier(userId) {
        this._native.setUserIdentifier(userId);
      }
    }]);

    return Crashlytics;
  }(_ModuleBase3.default);

  Crashlytics._NAMESPACE = 'crashlytics';
  Crashlytics._NATIVE_MODULE = 'RNFirebaseCrashlytics';
  exports.default = Crashlytics;
  var statics = exports.statics = {};
});