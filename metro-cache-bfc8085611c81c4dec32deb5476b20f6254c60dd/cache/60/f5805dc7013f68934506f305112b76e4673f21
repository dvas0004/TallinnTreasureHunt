__d(function (global, require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = require(_dependencyMap[1], "./../node_modules/react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _jsxFileName = "/home/dvas0004/Dropbox/TallinnTreasureHunt/components/PuzzleView.js";

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _reactRedux = require(_dependencyMap[2], "react-redux");

  var _reactNative = require(_dependencyMap[3], "react-native");

  var _actions = require(_dependencyMap[4], "../actions");

  var _vincenty = require(_dependencyMap[5], "../utils/vincenty.js");

  var _vincenty2 = _interopRequireDefault(_vincenty);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    PuzzleView: {
      displayName: "PuzzleView"
    }
  };

  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/home/dvas0004/Dropbox/TallinnTreasureHunt/components/PuzzleView.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var PuzzleView = _wrapComponent("PuzzleView")(function (_Component) {
    _inherits(PuzzleView, _Component);

    function PuzzleView(props) {
      _classCallCheck(this, PuzzleView);

      return _possibleConstructorReturn(this, (PuzzleView.__proto__ || Object.getPrototypeOf(PuzzleView)).call(this, props));
    }

    _createClass(PuzzleView, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        var selected_puzzle = this.props.appData && this.props.appData.puzzle_selected || null;
        console.log("selected_puzzle");
        console.log(selected_puzzle);
        var puzzle_question = null;
        var puzzle_answers = null;
        var puzzle_distance = null;

        if (selected_puzzle) {
          var puzzle = this.props.appData.puzzles[selected_puzzle];
          puzzle_distance = (0, _vincenty2.default)(puzzle.lat, puzzle.long, this.props.appData.position.latitude, this.props.appData.position.longitude);

          if (puzzle_distance > 50000) {
            puzzle_question = "Please get closer to the puzzle, you'll need physical clues to answer the question!";
          } else {
            puzzle_question = puzzle.question;
            var pickerItems = [];
            var answers = puzzle.answer;
            pickerItems.push(_react3.default.createElement(_reactNative.Picker.Item, {
              label: "Please Select an Answer...",
              value: "9999",
              key: "9999",
              __source: {
                fileName: _jsxFileName,
                lineNumber: 43
              }
            }));

            for (var i = 0; i < answers.length; i++) {
              pickerItems.push(_react3.default.createElement(_reactNative.Picker.Item, {
                label: answers[i],
                value: i,
                key: i,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 48
                }
              }));
            }

            puzzle_answers = _react3.default.createElement(
              _reactNative.Picker,
              {
                onValueChange: function onValueChange(itemValue, itemIndex) {
                  console.log("Answer Selected");
                  console.log(itemIndex);
                  console.log(itemValue);
                  console.log(puzzle.rightAnswer);

                  if (itemValue == puzzle.rightAnswer) {
                    _this2.props.correctAnswer(selected_puzzle);
                  }
                },
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 52
                }
              },
              pickerItems
            );
          }
        }

        return _react3.default.createElement(
          _reactNative.View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 74
            }
          },
          _react3.default.createElement(
            _reactNative.View,
            {
              style: {
                alignItems: "center"
              },
              __source: {
                fileName: _jsxFileName,
                lineNumber: 76
              }
            },
            _react3.default.createElement(
              _reactNative.Text,
              {
                style: {
                  fontWeight: "bold",
                  fontSize: 20
                },
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 78
                }
              },
              puzzle_question ? puzzle_question : "Please select a puzzle from the map below..."
            )
          ),
          _react3.default.createElement(
            _reactNative.View,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 84
              }
            },
            puzzle_answers
          ),
          _react3.default.createElement(
            _reactNative.Text,
            {
              style: {
                padding: 5
              },
              __source: {
                fileName: _jsxFileName,
                lineNumber: 88
              }
            },
            puzzle_distance ? "You are " + puzzle_distance + "m away from the puzzle" : null
          )
        );
      }
    }]);

    return PuzzleView;
  }(_react2.Component));

  function mapStateToProps(state) {
    return {
      appData: state.appData
    };
  }

  function mapDispatchToProps(dispatch) {
    return {
      correctAnswer: function correctAnswer(data) {
        return dispatch((0, _actions.correctAnswer)(data));
      }
    };
  }

  exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(PuzzleView);
});