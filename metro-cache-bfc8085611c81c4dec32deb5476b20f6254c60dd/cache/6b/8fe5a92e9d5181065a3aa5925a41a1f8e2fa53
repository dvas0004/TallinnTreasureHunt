__d(function (global, require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _log = require(_dependencyMap[0], "./log");

  var _log2 = _interopRequireDefault(_log);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  var ReferenceBase = function () {
    function ReferenceBase(path, module) {
      _classCallCheck(this, ReferenceBase);

      this._module = module;
      this.path = path || '/';
    }

    _createClass(ReferenceBase, [{
      key: "key",
      get: function get() {
        return this.path === '/' ? null : this.path.substring(this.path.lastIndexOf('/') + 1);
      }
    }, {
      key: "log",
      get: function get() {
        return this._module.log;
      }
    }]);

    return ReferenceBase;
  }();

  exports.default = ReferenceBase;
});