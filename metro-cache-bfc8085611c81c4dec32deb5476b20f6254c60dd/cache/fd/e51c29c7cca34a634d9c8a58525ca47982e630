__d(function (global, require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.statics = undefined;

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _reactNative = require(_dependencyMap[0], "react-native");

  var _internals = require(_dependencyMap[1], "../../utils/internals");

  var _internals2 = _interopRequireDefault(_internals);

  var _utils = require(_dependencyMap[2], "../../utils");

  var _ModuleBase2 = require(_dependencyMap[3], "../../utils/ModuleBase");

  var _ModuleBase3 = _interopRequireDefault(_ModuleBase2);

  var _package = require(_dependencyMap[4], "../../../package.json");

  var _package2 = _interopRequireDefault(_package);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var FirebaseCoreModule = _reactNative.NativeModules.RNFirebase;

  var RNFirebaseUtils = function (_ModuleBase) {
    _inherits(RNFirebaseUtils, _ModuleBase);

    function RNFirebaseUtils() {
      _classCallCheck(this, RNFirebaseUtils);

      return _possibleConstructorReturn(this, (RNFirebaseUtils.__proto__ || Object.getPrototypeOf(RNFirebaseUtils)).apply(this, arguments));
    }

    _createClass(RNFirebaseUtils, [{
      key: "checkPlayServicesAvailability",
      value: function checkPlayServicesAvailability() {
        if (_utils.isIOS) return null;
        var code = this.playServicesAvailability.code;

        if (!this.playServicesAvailability.isAvailable) {
          if (_internals2.default.OPTIONS.promptOnMissingPlayServices && this.playServicesAvailability.isUserResolvableError) {
            this.promptForPlayServices();
          } else {
            var error = _internals2.default.STRINGS.ERROR_PLAY_SERVICES(code);

            if (_internals2.default.OPTIONS.errorOnMissingPlayServices) {
              if (code === 2) console.warn(error);else throw new Error(error);
            } else {
              console.warn(error);
            }
          }
        }

        return null;
      }
    }, {
      key: "promptForPlayServices",
      value: function promptForPlayServices() {
        if (_utils.isIOS) return null;
        return FirebaseCoreModule.promptForPlayServices();
      }
    }, {
      key: "resolutionForPlayServices",
      value: function resolutionForPlayServices() {
        if (_utils.isIOS) return null;
        return FirebaseCoreModule.resolutionForPlayServices();
      }
    }, {
      key: "makePlayServicesAvailable",
      value: function makePlayServicesAvailable() {
        if (_utils.isIOS) return null;
        return FirebaseCoreModule.makePlayServicesAvailable();
      }
    }, {
      key: "sharedEventEmitter",
      get: function get() {
        return _internals2.default.SharedEventEmitter;
      }
    }, {
      key: "logLevel",
      set: function set(booleanOrDebugString) {
        _internals2.default.OPTIONS.logLevel = booleanOrDebugString;
      }
    }, {
      key: "databaseRegistrations",
      get: function get() {
        return Object.keys(_internals2.default.SyncTree._reverseLookup);
      }
    }, {
      key: "getDatabaseRegistrationDetails",
      get: function get() {
        return _internals2.default.SyncTree.getRegistration.bind(_internals2.default.SyncTree);
      }
    }, {
      key: "removeDatabaseRegistration",
      get: function get() {
        return _internals2.default.SyncTree.removeListenersForRegistrations.bind(_internals2.default.SyncTree);
      }
    }, {
      key: "playServicesAvailability",
      get: function get() {
        return FirebaseCoreModule.playServicesAvailability || {
          isAvailable: true,
          status: 0
        };
      }
    }, {
      key: "errorOnMissingPlayServices",
      set: function set(bool) {
        _internals2.default.OPTIONS.errorOnMissingPlayServices = bool;
      }
    }, {
      key: "promptOnMissingPlayServices",
      set: function set(bool) {
        _internals2.default.OPTIONS.promptOnMissingPlayServices = bool;
      }
    }]);

    return RNFirebaseUtils;
  }(_ModuleBase3.default);

  RNFirebaseUtils._NAMESPACE = 'utils';
  RNFirebaseUtils._NATIVE_DISABLED = true;
  RNFirebaseUtils._NATIVE_MODULE = 'RNFirebaseUtils';
  exports.default = RNFirebaseUtils;
  var statics = exports.statics = {
    DEFAULT_APP_NAME: _internals2.default.STRINGS.DEFAULT_APP_NAME
  };
});